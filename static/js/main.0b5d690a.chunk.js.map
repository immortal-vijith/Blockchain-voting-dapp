{"version":3,"sources":["components/CandidateCard.js","screens/Vote.js","components/CandidateForm.js","components/VotersForm.jsx","screens/Admin.js","utils/getWeb3.js","screens/Home.js","components/Navbar.js","components/CoverLayout.jsx","screens/CoverPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Candidate","id","name","voteCount","Card","sx","maxWidth","minWidth","CardHeader","title","Typography","align","variant","CardContent","padding","CardMedia","component","alt","height","image","CardActions","justifyContent","Vote","role","contract","currentAccount","web3","useState","candidates","setCandidates","vote","setVote","electionState","setElectionState","getCandidates","methods","candidatesCount","call","count","temp","i","getCandidateDetails","candidate","push","votes","voteCandidate","send","from","console","error","getElectionState","state","parseInt","useEffect","Box","onSubmit","event","preventDefault","Grid","container","mt","spacing","item","xs","Divider","FormControl","RadioGroup","row","overflowY","overflowX","display","width","value","onChange","target","map","index","FormControlLabel","labelPlacement","control","Radio","label","style","margin","Button","type","mx","CandidateForm","setName","handleForm","addCandidate","log","flexDirection","noValidate","autoComplete","Stack","TextField","VotersForm","addVoter","Admin","loading","setLoading","open","setOpen","handleClose","handleAgree","startElection","endElection","alignItems","color","onClick","Dialog","onClose","DialogContent","DialogContentText","DialogActions","autoFocus","getWeb3","Promise","resolve","reject","window","addEventListener","ethereum","Web3","enable","provider","providers","HttpProvider","Home","setRole","setWeb3","setCurrentAccount","setContract","loadWeb3","eth","getAccounts","accounts","net","getId","networkId","deployedNetwork","ElectionContract","networks","instance","Contract","abi","address","getRole","user","bgcolor","settings","Navbar","navigate","useNavigate","React","anchorElUser","setAnchorElUser","handleCloseUserMenu","handleSetting","currentTarget","innerText","AppBar","position","Container","Toolbar","disableGutters","mr","noWrap","href","flexGrow","fontFamily","fontWeight","letterSpacing","textDecoration","Tooltip","IconButton","p","Avatar","src","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","setting","MenuItem","textAlign","CoverLayoutRoot","styled","theme","palette","common","white","breakpoints","up","minHeight","maxHeight","Background","left","right","top","bottom","backgroundSize","backgroundRepeat","zIndex","CoverLayout","props","sxBackground","children","mb","fontSize","backgroundColor","opacity","backgroundImage","CoverPage","backgroundPosition","marked","sm","size","location","reload","darkTheme","createTheme","mode","App","ThemeProvider","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0b5d690a.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport default function Candidate({ id, name, voteCount }) {\r\n  const IMG =\r\n    \"https://images.unsplash.com/photo-1511367461989-f85a21fda167?auto=format&fit=crop&w=1400\";\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 345, minWidth: 300 }}>\r\n      <CardHeader\r\n        title={\r\n          <Typography align=\"center\" variant=\"subtitle1\">\r\n            {name}\r\n          </Typography>\r\n        }\r\n      />\r\n      <CardContent sx={{ padding: 0 }}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"green iguana\"\r\n          height=\"140\"\r\n          image={IMG}\r\n        />\r\n      </CardContent>\r\n      <CardActions sx={{ justifyContent: \"center\" }}>\r\n        {voteCount && (\r\n          <Typography align=\"center\" variant=\"\">\r\n            <strong>{voteCount}</strong> votes\r\n          </Typography>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\n\r\nimport Candidate from \"../components/CandidateCard\";\r\n\r\nexport default function Vote({ role, contract, web3, currentAccount }) {\r\n  // const [loading, setLoading] = useState(true);\r\n  const [candidates, setCandidates] = useState([]);\r\n  const [vote, setVote] = useState(null);\r\n  const [electionState, setElectionState] = useState(0);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const getCandidates = async () => {\r\n    if (contract) {\r\n      const count = await contract.methods.candidatesCount().call();\r\n      const temp = [];\r\n      for (let i = 0; i < count; i++) {\r\n        const candidate = await contract.methods.getCandidateDetails(i).call();\r\n        temp.push({ name: candidate[0], votes: candidate[1] });\r\n      }\r\n      setCandidates(temp);\r\n      // setLoading(false);\r\n    }\r\n  };\r\n\r\n  const voteCandidate = async (candidate) => {\r\n    try {\r\n      if (contract) {\r\n        await contract.methods.vote(candidate).send({ from: currentAccount });\r\n        getCandidates();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  const getElectionState = async () => {\r\n    if (contract) {\r\n      const state = await contract.methods.electionState().call();\r\n      setElectionState(parseInt(state));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getElectionState();\r\n    getCandidates();\r\n  }, [contract]);\r\n\r\n  const handleVoteChange = (event) => {\r\n    setVote(event.target.value);\r\n  };\r\n\r\n  const handleVote = (event) => {\r\n    event.preventDefault();\r\n    voteCandidate(vote);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <form onSubmit={handleVote}>\r\n        <Grid container sx={{ mt: 0 }} spacing={6} justifyContent=\"center\">\r\n          <Grid item xs={12}>\r\n            <Typography align=\"center\" variant=\"h6\">\r\n              {electionState === 0 &&\r\n                \"Please Wait... Election has not started yet.\"}\r\n              {electionState === 1 && \"VOTE FOR YOUR FAVOURITE CANDIDATE\"}\r\n              {electionState === 2 &&\r\n                \"Election has ended. See the results below.\"}\r\n            </Typography>\r\n            <Divider />\r\n          </Grid>\r\n          {electionState === 1 && (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <FormControl>\r\n                  <RadioGroup\r\n                    row\r\n                    sx={{\r\n                      overflowY: \"hidden\",\r\n                      overflowX: \"auto\",\r\n                      display: \"flex\",\r\n                      width: \"98vw\",\r\n                      justifyContent: \"center\",\r\n                    }}\r\n                    value={vote}\r\n                    onChange={handleVoteChange}\r\n                  >\r\n                    {candidates.map((candidate, index) => (\r\n                      <FormControlLabel\r\n                        key={index}\r\n                        labelPlacement=\"top\"\r\n                        control={<Radio />}\r\n                        value={index}\r\n                        label={<Candidate id={index} name={candidate.name} />}\r\n                      />\r\n                    ))}\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div style={{ margin: 20 }}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    sx={{ width: \"100%\" }}\r\n                  >\r\n                    Vote\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          {electionState === 2 && (\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sx={{\r\n                overflowY: \"hidden\",\r\n                overflowX: \"auto\",\r\n                display: \"flex\",\r\n                width: \"98vw\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {candidates &&\r\n                candidates.map((candidate, index) => (\r\n                  <Box sx={{ mx: 2 }} key={index}>\r\n                    <Candidate\r\n                      id={index}\r\n                      name={candidate.name}\r\n                      voteCount={candidate.votes}\r\n                    />\r\n                  </Box>\r\n                ))}\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </form>\r\n    </Box>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Stack } from \"@mui/material\";\r\n\r\nexport default function CandidateForm({ contract, web3, currentAccount }) {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleForm = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await contract.methods.addCandidate(name).send({ from: currentAccount });\r\n      console.log(\"candidate added\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setName(\"\");\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      component=\"form\"\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: \"2rem\",\r\n        width: \"40%\",\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      onSubmit={handleForm}\r\n    >\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Candiate Name\"\r\n          variant=\"outlined\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n        <Button variant=\"contained\" type=\"submit\">\r\n          Add Candiates\r\n        </Button>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Stack } from \"@mui/material\";\r\n\r\nexport default function VotersForm({ contract, web3, currentAccount }) {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const handleForm = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await contract.methods.addVoter(name).send({ from: currentAccount });\r\n      console.log(\"voter added\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    setName(\"\");\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      component=\"form\"\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: \"2rem\",\r\n        width: \"40%\",\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n      onSubmit={handleForm}\r\n    >\r\n      <Stack spacing={2}>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Voters Address\"\r\n          variant=\"outlined\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n        <Button variant=\"contained\" type=\"submit\">\r\n          Add Voter\r\n        </Button>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\n\r\nimport Candidate from \"../components/CandidateCard\";\r\nimport CandidateForm from \"../components/CandidateForm\";\r\nimport VotersForm from \"../components/VotersForm\";\r\n\r\nexport default function Admin({ role, contract, web3, currentAccount }) {\r\n  const [electionState, setElectionState] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [candidates, setCandidates] = useState([]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const getCandidates = async () => {\r\n    if (contract) {\r\n      console.log(contract);\r\n      const count = await contract.methods.candidatesCount().call();\r\n      const temp = [];\r\n      for (let i = 0; i < count; i++) {\r\n        const candidate = await contract.methods.getCandidateDetails(i).call();\r\n        temp.push({ name: candidate[0], votes: candidate[1] });\r\n      }\r\n      setCandidates(temp);\r\n      setLoading(false);\r\n      console.log(temp);\r\n    }\r\n  };\r\n\r\n  const getElectionState = async () => {\r\n    if (contract) {\r\n      const state = await contract.methods.electionState().call();\r\n      setElectionState(parseInt(state));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getElectionState();\r\n    getCandidates();\r\n  }, [contract]);\r\n\r\n  const handleEnd = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleAgree = async () => {\r\n    if (electionState === 0) {\r\n      try {\r\n        if (contract) {\r\n          await contract.methods.startElection().send({ from: currentAccount });\r\n          getElectionState();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    } else if (electionState === 1) {\r\n      try {\r\n        if (contract) {\r\n          await contract.methods.endElection().send({ from: currentAccount });\r\n          getElectionState();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {loading ? (\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"80vh\",\r\n          }}\r\n        >\r\n          Loading...\r\n        </Box>\r\n      ) : (\r\n        <Box>\r\n          <Grid container sx={{ mt: 0 }} spacing={4}>\r\n            <Grid item xs={12}>\r\n              <Typography align=\"center\" variant=\"h6\" color=\"textSecondary\">\r\n                ELECTION STATUS :{\" \"}\r\n                {electionState === 0 && \"Election has not started.\"}\r\n                {electionState === 1 && \"Election is in progress.\"}\r\n                {electionState === 2 && \"Election has ended.\"}\r\n              </Typography>\r\n              <Divider />\r\n            </Grid>\r\n            {electionState !== 2 && (\r\n              <Grid item xs={12} sx={{ display: \"flex\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  sx={{ width: \"40%\", margin: \"auto\" }}\r\n                  onClick={handleEnd}\r\n                >\r\n                  {electionState === 0 && \"Start Election\"}\r\n                  {electionState === 1 && \"End Election\"}\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n\r\n            <Grid item xs={12}>\r\n              <Typography align=\"center\" variant=\"h6\">\r\n                {electionState === 0 && \"ADD VOTERS / CANDIDATES\"}\r\n                {electionState === 1 && \"SEE LIVE RESULTS\"}\r\n                {electionState === 2 && \"FINAL ELECTION RESULT\"}\r\n              </Typography>\r\n              <Divider />\r\n            </Grid>\r\n\r\n            {electionState === 0 && (\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                sx={{\r\n                  overflowY: \"hidden\",\r\n                  overflowX: \"auto\",\r\n                  display: \"flex\",\r\n                  width: \"98vw\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    width: \"100%\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <VotersForm\r\n                    contract={contract}\r\n                    web3={web3}\r\n                    currentAccount={currentAccount}\r\n                  />\r\n                  <CandidateForm\r\n                    contract={contract}\r\n                    web3={web3}\r\n                    currentAccount={currentAccount}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            )}\r\n\r\n            {electionState > 0 && (\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                sx={{\r\n                  overflowY: \"hidden\",\r\n                  overflowX: \"auto\",\r\n                  display: \"flex\",\r\n                  width: \"98vw\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                {candidates &&\r\n                  candidates.map((candidate, index) => (\r\n                    <Box sx={{ mx: 2 }} key={index}>\r\n                      <Candidate\r\n                        id={index}\r\n                        name={candidate.name}\r\n                        voteCount={candidate.votes}\r\n                      />\r\n                    </Box>\r\n                  ))}\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n\r\n          <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n          >\r\n            <DialogContent>\r\n              <DialogContentText id=\"alert-dialog-description\">\r\n                {electionState === 0 && \"Do you want to start the election?\"}\r\n                {electionState === 1 && \"Do you want to end the election?\"}\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose}>Disagree</Button>\r\n              <Button onClick={handleAgree} autoFocus>\r\n                Agree\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Accounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"http://127.0.0.1:7545\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import { useEffect, useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Vote from \"./Vote\";\r\nimport Admin from \"./Admin\";\r\nimport ElectionContract from \"../contracts/Election.json\";\r\nimport getWeb3 from \"../utils/getWeb3\";\r\n\r\nexport default function Home() {\r\n  const [role, setRole] = useState(2);\r\n  const [web3, setWeb3] = useState(null);\r\n  const [currentAccount, setCurrentAccount] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const loadWeb3 = async () => {\r\n    try {\r\n      const web3 = await getWeb3();\r\n      const accounts = await web3.eth.getAccounts();\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = ElectionContract.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        ElectionContract.abi,\r\n        deployedNetwork && deployedNetwork.address\r\n      );\r\n      setWeb3(web3);\r\n      setCurrentAccount(accounts[0]);\r\n      setContract(instance);\r\n      console.log(\"init\");\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  const getRole = async () => {\r\n    if (contract) {\r\n      const user = await contract.methods.getRole(currentAccount).call();\r\n      setRole(parseInt(user));\r\n      console.log(\"role:\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadWeb3();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getRole();\r\n  }, [contract]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        bgcolor: \"background.default\",\r\n        color: \"text.primary\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      {loading ? (\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"80vh\",\r\n          }}\r\n        >\r\n          Loading...\r\n        </Box>\r\n      ) : (\r\n        <Box>\r\n          {role === 1 && (\r\n            <Admin\r\n              role={role}\r\n              contract={contract}\r\n              web3={web3}\r\n              currentAccount={currentAccount}\r\n            />\r\n          )}\r\n\r\n          {role === 2 && (\r\n            <Vote\r\n              role={role}\r\n              contract={contract}\r\n              web3={web3}\r\n              currentAccount={currentAccount}\r\n            />\r\n          )}\r\n\r\n          {role === 3 && (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"80vh\",\r\n              }}\r\n            >\r\n              Unauthorized User\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport HowToVoteIcon from \"@mui/icons-material/HowToVote\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst settings = [\"Logout\"];\r\n\r\nconst Navbar = () => {\r\n  const navigate = useNavigate();\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  const handleSetting = (event) => {\r\n    switch (event.currentTarget.innerText) {\r\n      case \"Profile\":\r\n        console.log(\"Profile\");\r\n        break;\r\n      case \"Logout\":\r\n        navigate(\"/\");\r\n        console.log(\"Logout\");\r\n        break;\r\n      default:\r\n        console.log(\"Default\");\r\n        handleCloseUserMenu();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <HowToVoteIcon sx={{ mr: 1 }} />\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"\"\r\n            sx={{\r\n              mr: 2,\r\n              flexGrow: 1,\r\n              fontFamily: \"monospace\",\r\n              fontWeight: 700,\r\n              letterSpacing: \".3rem\",\r\n              color: \"inherit\",\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            Voting System\r\n          </Typography>\r\n\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <Avatar alt=\"Remy Sharp\" src=\"url\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: \"45px\" }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting} onClick={handleSetting}>\r\n                  <Typography textAlign=\"center\">{setting}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport HowToVoteIcon from \"@mui/icons-material/HowToVote\";\r\n\r\nimport Container from \"@mui/material/Container\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst CoverLayoutRoot = styled(\"section\")(({ theme }) => ({\r\n  color: theme.palette.common.white,\r\n  position: \"relative\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    height: \"100vh\",\r\n    minHeight: 500,\r\n    maxHeight: 1300,\r\n  },\r\n}));\r\n\r\nconst Background = styled(Box)({\r\n  position: \"absolute\",\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  backgroundSize: \"cover\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  zIndex: -2,\r\n});\r\n\r\nfunction CoverLayout(props) {\r\n  const { sxBackground, children } = props;\r\n\r\n  return (\r\n    <CoverLayoutRoot>\r\n      <Container\r\n        sx={{\r\n          mt: 3,\r\n          mb: 14,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <HowToVoteIcon style={{ fontSize: 64 }} />\r\n        {children}\r\n        <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            left: 0,\r\n            right: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            backgroundColor: \"common.black\",\r\n            opacity: 0.5,\r\n            zIndex: -1,\r\n          }}\r\n        />\r\n        <Background sx={sxBackground} />\r\n      </Container>\r\n    </CoverLayoutRoot>\r\n  );\r\n}\r\n\r\nCoverLayout.propTypes = {\r\n  children: PropTypes.node,\r\n  sxBackground: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])\r\n    ),\r\n    PropTypes.func,\r\n    PropTypes.object,\r\n  ]),\r\n};\r\n\r\nexport default CoverLayout;\r\n","import * as React from \"react\";\r\nimport { Button, Typography } from \"@mui/material\";\r\nimport CoverLayout from \"../components/CoverLayout\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst backgroundImage =\r\n  \"https://images.unsplash.com/photo-1626705343685-eb1e06c9271f?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1332&q=80\";\r\n\r\nexport default function CoverPage() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = () => {\r\n    console.log(\"home button clicked\");\r\n    navigate(\"/home\");\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <CoverLayout\r\n      sxBackground={{\r\n        backgroundImage: `url(${backgroundImage})`,\r\n        backgroundColor: \"#7fc7d\", // Average color of the background image.\r\n        backgroundPosition: \"center\",\r\n      }}\r\n    >\r\n      {/* Increase the network loading priority of the background image. */}\r\n      <img\r\n        style={{ display: \"none\" }}\r\n        src={backgroundImage}\r\n        alt=\"increase priority\"\r\n      />\r\n      <Typography color=\"inherit\" align=\"center\" variant=\"h2\" marked=\"center\">\r\n        De-Vote\r\n      </Typography>\r\n      <Typography\r\n        color=\"inherit\"\r\n        align=\"center\"\r\n        variant=\"h5\"\r\n        sx={{ mb: 4, mt: { sx: 3, sm: 7 } }}\r\n      >\r\n        A decentralized voting system that is built on the Ethereum blockchain.\r\n      </Typography>\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        sx={{ minWidth: 200 }}\r\n        onClick={handleClick}\r\n      >\r\n        <b>Click Here To Vote</b>\r\n      </Button>\r\n    </CoverLayout>\r\n  );\r\n}\r\n","import { Routes, Route } from \"react-router-dom\";\r\n\r\nimport Home from \"./screens/Home\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport CoverPage from \"./screens/CoverPage\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: \"dark\",\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <div>\r\n        <Routes>\r\n          <Route path=\"/\" element={<div></div>} />\r\n          <Route path=\"/*\" element={<Navbar />} />\r\n        </Routes>\r\n      </div>\r\n\r\n      <div>\r\n        <Routes>\r\n          <Route path=\"/\" element={<CoverPage />} />\r\n          <Route path=\"/home\" element={<Home />} />\r\n        </Routes>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}